@model CrowdSisters.Models.CrearProyectoViewModel

@{
    ViewData["Title"] = "Crear Proyecto";
    Usuario usuario = new Usuario();
    usuario = ViewBag.Usuario;
    string nombreApellidos = usuario.Nombre + " " + usuario.PrimerApellido + " " + usuario.SegundoApellido;

}

<link rel="stylesheet" href="/css/crearProyecto.css" />

<div class="crearproyecto">
    <img class="imagenproyecto-icon2"
         alt=""
         src="./img/CrearProyecto.png" />

    <section class="cuntanos-tu-proyecto">Cuéntanos tu proyecto</section>
    <section class="project-details1">
        <div class="personal-and-project-parent">
            <div class="personal-and-project">
                <img id="lineaprogreso"
                    class ="lineaprogreso-icon"
                     loading="lazy"
                     alt=""
                     src= "./img/BarraDatosPersonales.png" />
            </div>
            <div class="project-confirmation">
                <div class="datos-personales">DATOS PERSONALES</div>
                <div class="tu-perfil-wrapper">
                    <div class="tu-perfil">TU PERFIL</div>
                </div>
                <div class="tu-proyecto">
                    <span>TU</span>
                    <span class="span3"> </span>
                    <span>PROYECTO</span>
                </div>
                <div class="datos-personales">CONFIRMACIÓN</div>
            </div>
        </div>
    </section>

    <div class="personal-details-content-wrapper">
        <div class="personal-details-content">
            <div class="personal-data-form">

                @using (Html.BeginForm("Index", "CrearProyecto", FormMethod.Post, new { id = "crearProyectoForm", enctype = "multipart/form-data", @class = "form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <!-- Paso 1: Datos Personales -->
                    <div id="DatosPersonales">

                        <div class="personal-info">
                            <div class="personal-intro">
                                <div class="about-you">
                                    <div class="complete-details">
                                        <h1 class="completa-tus-datos">
                                            Completa tus datos personales
                                        </h1>
                                    </div>
                                    <h3 class="danos-un-poco">
                                        Danos un poco de información sobre ti como persona responsable
                                        del proyecto
                                    </h3>
                                </div>
                            </div>
                            <div class="personal-info-inner">
                                <div class="line-div"></div>
                            </div>
                            <div class="project-info">
                                <h3 class="si-quieres-crear">
                                    Si quieres crear un proyecto necesitamos que nos des tus datos
                                    personales completos como persona responsable del proyecto.
                                    Estos datos que introduzcas no serán públicos. Más adelante, si
                                    el proyecto acaba con éxito, te pediremos los datos bancarios y
                                    de facturación para poder hacer la transferencia de los fondos
                                    recaudados.
                                </h3>
                            </div>
                        </div>


                        @Html.Hidden("IDUsuario", usuario.IDUsuario, new { @class = "form-inputs" })

                        <div class="partes-formulario">
                            <div class="primera-parte-columnas-form">
                                <div class="columna-form">
                                <div class="label-input">
                                        @Html.LabelFor(m => m.NombreApellidos, "Nombre y Apellidos", new { @class = "form-labels" })
                                        @Html.TextBox("NombreApellidos", nombreApellidos, new { @class = "form-inputs" })
                                        @Html.ValidationMessageFor(m => m.NombreApellidos, "", new { @class = "text-danger error-size" })

                                </div>

                                <div class="label-input">
                                        @Html.LabelFor(m => m.DNI, new { @class = "form-labels" })
                                        @Html.TextBox("DNI", usuario.DNI, new { @class = "form-inputs" })
                                        @Html.ValidationMessageFor(m => m.DNI, "", new { @class = "text-danger error-size" })
                                </div>

                                <div class="label-input">
                                        @Html.LabelFor(m => m.Direccion, "Dirección(calle, numero)", new { @class = "form-labels" })
                                        @Html.TextBox("Direccion", usuario.Direccion, new { @class = "form-inputs" })
                                        @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger error-size" })
                                </div>
                                </div>
                                <div class="columna-form">

                                <div class="label-input">
                                        @Html.LabelFor(m => m.CodigoPostal, "Código Postal", new { @class = "form-labels" })
                                        @Html.TextBox("CodigoPostal", usuario.CodigoPostal, new { @class = "form-inputs" })
                                        @Html.ValidationMessageFor(m => m.CodigoPostal, "", new { @class = "text-danger error-size" })
                                </div>

                                <div class="label-input">
                                        @Html.LabelFor(m => m.Poblacion, "Población", new { @class = "form-labels" })
                                        @Html.TextBox("Poblacion", usuario.Poblacion, new { @class = "form-inputs" })
                                        @Html.ValidationMessageFor(m => m.Poblacion, "", new { @class = "text-danger error-size" })
                                </div>

                                <div class="label-input">
                                        @Html.LabelFor(m => m.Telefono, "Teléfono", new { @class = "form-labels" })
                                        @Html.TextBox("Telefono", usuario.Telefono, new { @class = "form-control form-inputs" })
                                        @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger error-size" })
                                </div>
                               </div>
                             </div>

                            <div class="label-input">
                                @Html.Label("Pais", "País", new { @class = "form-labels" })
                                <select class="form-inputs"  name="Pais">
                                    @foreach (var pais in ViewBag.Paises as List<string>)
                                    {
                                        if (pais == usuario.Pais)
                                        {
                                            <option value="@pais" selected>@pais</option>
                                        }
                                        else
                                        {
                                            <option value="@pais">@pais</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessage("Pais", "", new { @class = "text-danger error-size" }) <!-- Cambié ValidationMessageFor por ValidationMessage -->
                            </div>

                        </div>
                    </div>
                    <!-- Paso 2: Tu Perfil -->
                    <div id="TuPerfil" style="display:none;">
                        <div class="personal-info">
                            <div class="personal-intro">
                                <div class="about-you">
                                    <div class="complete-details">
                                        <h1 class="completa-tus-datos">
                                            Perfil publico de la impulsora</h1>
                                    </div>
                                    <h3 class="danos-un-poco">
                                        Esta será la información publica que aparecerá en tu perfil de autora del proyecto
                                    </h3>
                                </div>
                            </div>
                            <div class="personal-info-inner">
                                <div class="line-div"></div>
                            </div>
                        </div>
                        @{
                            string sRutaImagen = string.IsNullOrEmpty(@usuario.URLImagenUsuario) ? "https://via.placeholder.com/150" : @usuario.URLImagenUsuario;
                        }


                        <div class="parte-formulario2">
                            <div class="fotos-wrap">
                            <div class="form-group" style="position: relative; width: 300px; height: 300px;">
                                <input type="file" id="URLImagenUsuario" name="URLImagenUsuario" asp-for="URLImagenUsuario" accept="image/*" required style="display: none;" onchange="previewImage(event)">

                                <img id="preview"
                                     src= "@sRutaImagen"
                                     alt="Haz clic para cargar una imagen"
                                     onclick="document.getElementById('URLImagenUsuario').click();"
                                     style="cursor: pointer; width: 100%; height: 100%; object-fit: cover; border: 2px dashed #ccc;">

                                <div id="overlayText" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: white; background-color: rgba(0, 0, 0, 0.5); text-align: center; font-size: 14px; cursor: pointer;" onclick="document.getElementById('URLImagenUsuario').click();">
                                    Agrega o modifica tu foto de perfil
                                </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.URLImagenUsuario, "", new { @class = "text-danger error-size" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.PerfilPublico, "Perfil Público", new { @class = "form-labels" })
                                @Html.TextArea("PerfilPublico", usuario.PerfilPublico, new { @class = "form-control", @rows = "10", @cols = "50" })
                                @Html.ValidationMessageFor(m => m.PerfilPublico, "", new { @class = "text-danger error-size" })
                            </div>
                        </div>
                    </div>

                    <!-- Paso 3: Tu Proyecto -->
                    <div id="TuProyecto" style="display:none;">
                        <div class="personal-info">
                            <div class="personal-intro">
                                <div class="about-you">
                                    <div class="complete-details">
                                        <h1 class="completa-tus-datos">
                                            Tu Proyecto
                                        </h1>
                                    </div>
                                    <h3 class="danos-un-poco">
                                        ¿Qué? ¿Cómo? ¿Cuándo?... Cuéntanoslo todo sobre tu proyecto
                                    </h3>
                                </div>
                            </div>
                            <div class="personal-info-inner">
                                <div class="line-div"></div>
                            </div>
                            <div class="project-info">
                                <h3 class="si-quieres-crear">
                                    La información que subas en el siguiente formulario será solo para nuestra evaluación y poder asesorarte de la mejor manera.
                                    Una vez revisada tu propuesta y si encaja en CrowdSisters, te daremos acceso a tu página privada de gestión. Dispondrás de todo el tiempo que necesites para trabajar la versión definitiva de tu página de campaña con todo nuestro apoyo y consejos sobre objetivo, recompensas, planteamiento... y cuando lo tengas todo listo la podrás publicar el día y hora que quieras :)
                                </h3>
                            </div>
                        </div>
                        <div class="partes-formulario3">
                        <div class="tercera-parte-columnas-form">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Titulo, "Título de la campaña", new { @class = "form-labels" })
                            @Html.TextBoxFor(m => m.Titulo, new { @class = "form-inputs" })
                            @Html.ValidationMessageFor(m => m.Titulo, "", new { @class = "text-danger error-size" })
                        </div>
                        </div>
                            <div class="tercera-parte-columnas-form">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Subtitulo, "Subtítulo (resume el proyecto en 140 caracteres)", new { @class = "form-labels" })
                            @Html.TextAreaFor(m => m.Subtitulo, new { @class = "form-inputs", @rows = "10", @cols = "50" })
                            @Html.ValidationMessageFor(m => m.Subtitulo, "", new { @class = "text-danger error-size" })
                        </div>
                        </div>
                            <div class="tercera-parte-columnas-form">
                        <div class="form-group">
                            @Html.LabelFor(m => m.IDCategoria, "Categoría", new { @class = "form-labels" })
                            @Html.DropDownListFor(m => m.IDCategoria, (SelectList)ViewBag.ListCategoria, "Seleccione una categoría", new { @class = "form-inputs", id = "categoriaSelect" })
                            @Html.ValidationMessageFor(m => m.IDCategoria, "", new { @class = "text-danger error-size" })
                        </div>       
                        <div class="form-group">
                            @Html.LabelFor(m => m.FKSubcategoria, "Subcategoría", new { @class = "form-labels" })
                            @Html.DropDownListFor(m => m.FKSubcategoria, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Seleccione una subcategoría", new { @class = "form-inputs", id = "subcategoriaSelect" })
                            @Html.ValidationMessageFor(m => m.FKSubcategoria, "", new { @class = "text-danger error-size" })
                        </div>
                        </div>
                            <div class="tercera-parte-columnas-form">
                        <div class="form-group">
                            @Html.LabelFor(m => m.MontoObjetivo, "Objetivo de recaudación (EUR)", new { @class = "form-labels" })
                            @Html.TextBoxFor(m => m.MontoObjetivo, new { @class = "form-inputs" })
                            @Html.ValidationMessageFor(m => m.MontoObjetivo, "", new { @class = "text-danger error-size" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.FechaFinalizacion, "Días para conseguir el objetivo", new { @class = "form-labels" })
                            @Html.EditorFor(m => m.FechaFinalizacion, new { htmlAttributes = new { @class = "form-inputs", type = "date" } })
                            @Html.ValidationMessageFor(m => m.FechaFinalizacion, "", new { @class = "text-danger error-size" })
                        </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.DescripcionGeneral, " Descripción general del proyecto", new { @class = "form-labels" })
                            @Html.TextAreaFor(m => m.DescripcionGeneral, new { @class = "form-inputs", @rows = "10", @cols = "50" })
                            @Html.ValidationMessageFor(m => m.DescripcionGeneral, "", new { @class = "text-danger error-size" })
                        </div>

                        <label class="form-labels">Añade imágenes para destacar tu proyecto</label>
                            <div class="fotos-wrap">
                                <!-- Cuadro para la imagen de encabezado -->
                                <div class="form-group" style="position: relative; width: 300px; height: 300px;">
                                    <input type="file" id="UrlFotoEncabezado" name="UrlFotoEncabezado" asp-for="UrlFotoEncabezado" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewEncabezado')">
                                    <img id="previewEncabezado" src="https://via.placeholder.com/300" alt="Haz clic para cargar una imagen" onclick="document.getElementById('UrlFotoEncabezado').click();" style="cursor: pointer; width: 100%; height: 100%; object-fit: cover; border: 2px dashed #ccc;">
                                    <div id="overlayTextEncabezado" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: white; background-color: rgba(0, 0, 0, 0.5); text-align: center; font-size: 18px; cursor: pointer;" onclick="document.getElementById('UrlFotoEncabezado').click();">
                                        Agrega o modifica tu imagen
                                    </div>
                                    @Html.ValidationMessageFor(m => m.UrlFotoEncabezado, "", new { @class = "text-danger error-size" })
                                </div>

                                <!-- Cuadro para la primera imagen -->
                                <div class="form-group" style="position: relative; width: 300px; height: 300px;">
                                    <input type="file" id="UrlFoto1" name="UrlFoto1" asp-for="UrlFoto1" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewFoto1')">
                                    <img id="previewFoto1" src="https://via.placeholder.com/300" alt="Haz clic para cargar una imagen" onclick="document.getElementById('UrlFoto1').click();" style="cursor: pointer; width: 100%; height: 100%; object-fit: cover; border: 2px dashed #ccc;">
                                    <div id="overlayTextFoto1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: white; background-color: rgba(0, 0, 0, 0.5); text-align: center; font-size: 18px; cursor: pointer;" onclick="document.getElementById('UrlFoto1').click();">
                                        Agrega o modifica tu imagen
                                    </div>
                                    @Html.ValidationMessageFor(m => m.UrlFoto1, "", new { @class = "text-danger error-size" })
                                </div>

                                <!-- Cuadro para la segunda imagen -->
                                <div class="form-group" style="position: relative; width: 300px; height: 300px;">
                                    <input type="file" id="UrlFoto2" name="UrlFoto2" asp-for="UrlFoto2" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewFoto2')">
                                    <img id="previewFoto2" src="https://via.placeholder.com/300" alt="Haz clic para cargar una imagen" onclick="document.getElementById('UrlFoto2').click();" style="cursor: pointer; width: 100%; height: 100%; object-fit: cover; border: 2px dashed #ccc;">
                                    <div id="overlayTextFoto2" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: white; background-color: rgba(0, 0, 0, 0.5); text-align: center; font-size: 18px; cursor: pointer;" onclick="document.getElementById('UrlFoto2').click();">
                                        Agrega o modifica tu imagen
                                    </div>
                                    @Html.ValidationMessageFor(m => m.UrlFoto2, "", new { @class = "text-danger error-size" })
                                </div>

                                <!-- Cuadro para la tercera imagen -->
                                <div class="form-group" style="position: relative; width: 300px; height: 300px;">
                                    <input type="file" id="UrlFoto3" name="UrlFoto3" asp-for="UrlFoto3" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewFoto3')">
                                    <img id="previewFoto3" src="https://via.placeholder.com/300" alt="Haz clic para cargar una imagen" onclick="document.getElementById('UrlFoto3').click();" style="cursor: pointer; width: 100%; height: 100%; object-fit: cover; border: 2px dashed #ccc;">
                                    <div id="overlayTextFoto3" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: white; background-color: rgba(0, 0, 0, 0.5); text-align: center; font-size: 18px; cursor: pointer;" onclick="document.getElementById('UrlFoto3').click();">
                                        Agrega o modifica tu imagen
                                    </div>
                                    @Html.ValidationMessageFor(m => m.UrlFoto3, "", new { @class = "text-danger error-size" })
                                </div>
                            </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.DescripcionFinalidad, "¿Cuál es el objetivo de tu proyecto?", new { @class = "form-labels" })
                                @Html.TextAreaFor(m => m.DescripcionFinalidad, new { @class = "form-inputs", @rows = "10", @cols = "50" })
                            @Html.ValidationMessageFor(m => m.DescripcionFinalidad, "", new { @class = "text-danger error-size" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.DescripcionPresupuesto, "¿A qué destinarás el dinero? Un pequeño presupuesto a grandes rasgos. ", new { @class = "form-labels" })
                                @Html.TextAreaFor(m => m.DescripcionPresupuesto, new { @class = "form-inputs", @rows = "10", @cols = "50" })
                            @Html.ValidationMessageFor(m => m.DescripcionPresupuesto, "", new { @class = "text-danger error-size" })
                        </div>

                        <label class="form-labels">¿Cuál es la recompensa principal que tienes previsto ofrecer y a qué precio?   Indica otras recompensas que podrás ofrecer. </label>
                            <div class="card-container-recompensas">

                            <div class="tarjeta-recompensa">
                                <div class="form-group image-preview" onclick="document.getElementById('URLImagenRecompensa').click();">
                                    <input type="file" id="URLImagenRecompensa" name="URLImagenRecompensa" asp-for="URLImagenRecompensa" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewRecompensa' )">
                                    <img id="previewRecompensa" src="https://via.placeholder.com/150" alt="Haz clic para cargar una imagen">
                                    <div class="overlay-text">Haz clic para cargar una imagen</div>
                                </div>
                                @Html.ValidationMessageFor(m => m.URLImagenRecompensa, "", new { @class = "text-danger error-size" })

                                <div class="form-group">
                                    @Html.LabelFor(m => m.TituloRecompensa, "Título de la recompensa", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.TituloRecompensa, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.TituloRecompensa, "", new { @class = "text-danger error-size" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.DescripcionRecompensa, "Descripción de la recompensa", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.DescripcionRecompensa, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.DescripcionRecompensa, "", new { @class = "text-danger error-size" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Monto, "Precio de la recompensa", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.Monto, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.Monto, "", new { @class = "text-danger error-size" })
                                </div>
                            </div>

                            <div class="tarjeta-recompensa">
                                <div class="form-group image-preview" onclick="document.getElementById('URLImagenRecompensa1').click();">
                                    <input type="file" id="URLImagenRecompensa1" name="URLImagenRecompensa1" asp-for="URLImagenRecompensa1" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewRecompensa1')">
                                    <img id="previewRecompensa1" src="https://via.placeholder.com/150" alt="Haz clic para cargar una imagen">
                                    <div class="overlay-text">Haz clic para cargar una imagen</div>
                                </div>
                                @Html.ValidationMessageFor(m => m.URLImagenRecompensa1, "", new { @class = "text-danger error-size" })

                                <div class="form-group">
                                    @Html.LabelFor(m => m.TituloRecompensa1, "Título de la recompensa 1", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.TituloRecompensa1, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.TituloRecompensa1, "", new { @class = "text-danger error-size" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.DescripcionRecompensa1, "Descripción de la recompensa 1", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.DescripcionRecompensa1, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.DescripcionRecompensa1, "", new { @class = "text-danger error-size" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Monto1, "Precio de la recompensa 1", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.Monto1, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.Monto1, "", new { @class = "text-danger error-size" })
                                </div>
                            </div>
                            <div class="tarjeta-recompensa">
                                <div class="form-group image-preview" onclick="document.getElementById('URLImagenRecompensa2').click();">
                                    <input type="file" id="URLImagenRecompensa2" name="URLImagenRecompensa2" asp-for="URLImagenRecompensa2" accept="image/*" required style="display: none;" onchange="previewProjectImage(event, 'previewRecompensa2')">
                                    <img id="previewRecompensa2" src="https://via.placeholder.com/150" alt="Haz clic para cargar una imagen">
                                    <div class="overlay-text">Haz clic para cargar una imagen</div>
                                </div>
                                @Html.ValidationMessageFor(m => m.URLImagenRecompensa2, "", new { @class = "text-danger error-size" })

                                <div class="form-group">
                                    @Html.LabelFor(m => m.TituloRecompensa2, "Título de la recompensa 2", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.TituloRecompensa2, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.TituloRecompensa2, "", new { @class = "text-danger error-size" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.DescripcionRecompensa2, "Descripción de la recompensa 2", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.DescripcionRecompensa2, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.DescripcionRecompensa2, "", new { @class = "text-danger error-size" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Monto2, "Precio de la recompensa 2", new { @class = "form-labels" })
                                    @Html.TextBoxFor(m => m.Monto2, new { @class = "form-inputs" })
                                    @Html.ValidationMessageFor(m => m.Monto2, "", new { @class = "text-danger error-size" })
                                </div>
                            </div>
                            </div>

                        </div>
                    </div>
                    <!-- Botones de navegación -->
                    <div class="button-container">
                        <button type="button" id="nextBtn" class="botn-siguiente-paso">Siguiente Paso</button>
                        <button type="submit" id="submitBtn" class="botn-siguiente-paso" style="display:none;">Confirmar</button>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#categoriaSelect').on('change', function () {
                var idCategoria = $(this).val();

                // Limpiar el select de subcategorías
                $('#subcategoriaSelect').empty();
                $('#subcategoriaSelect').append('<option value="">Seleccione una subcategoría</option>');

                if (idCategoria) {
                    $.ajax({
                        url: '@Url.Action("GetSubcategorias", "CrearProyecto")', // Asegúrate de reemplazar "TuControlador" con el nombre real del controlador
                        type: 'GET',
                        data: { idCategoria: idCategoria },
                        success: function (data) {
                            $.each(data, function (index, subcategoria) {
                                $('#subcategoriaSelect').append(
                                    $('<option></option>').val(subcategoria.idSubcategoria).text(subcategoria.nombre)
                                );
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error('Error al obtener subcategorías:', error);
                        }
                    });
                }
            });
        });
        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById('preview');
            const overlayText = document.getElementById('overlayText');

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    overlayText.style.display = 'none'; // Oculta el texto cuando se carga una imagen
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        function previewProjectImage(event, previewId) {
            const input = event.target;
            const preview = document.getElementById(previewId);
            const overlayText = document.getElementById('overlayText' + previewId.slice(-1));

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    overlayText.style.display = 'none'; // Oculta el texto cuando se carga una imagen
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial");

    <script>
        //passar a marc
        document.addEventListener("DOMContentLoaded", function () {
            const steps = ["DatosPersonales", "TuPerfil", "TuProyecto"];
            let currentStep = 0;

            function showStep(stepIndex) {
                steps.forEach((stepId, index) => {
                    document.getElementById(stepId).style.display = index === stepIndex ? 'block' : 'none';
                });
                // Controla la visibilidad de los botones
                document.getElementById("nextBtn").style.display = stepIndex < steps.length - 1 ? 'inline' : 'none';
                document.getElementById("submitBtn").style.display = stepIndex === steps.length - 1 ? 'inline' : 'none';
            }

            // Mostrar el primer paso
            showStep(currentStep);

            // Función para validar el campo de nombres y apellidos
            function validarNombresApellidos(input) {
                const nombresArray = input.value.trim().split(' ');

                if (nombresArray.length !== 3) {
                    // Mostrar el mensaje de error usando el helper `Html.ValidationMessageFor`
                    const errorMessageElement = document.querySelector('[data-valmsg-for="NombreApellidos"]');
                    if (errorMessageElement) {
                        errorMessageElement.textContent = "Por favor, ingrese un nombre y dos apellidos.";
                        errorMessageElement.classList.remove("field-validation-valid");
                        errorMessageElement.classList.add("field-validation-error");
                    }
                    return false;
                }

                // Limpiar el mensaje de error si todo está bien
                const errorMessageElement = document.querySelector('[data-valmsg-for="NombreApellidos"]');
                if (errorMessageElement) {
                    errorMessageElement.textContent = "";
                    errorMessageElement.classList.remove("field-validation-error");
                    errorMessageElement.classList.add("field-validation-valid");
                }
                return true;
            }

            // Validación y navegación
            function validateSection() {
                const form = $("#crearProyectoForm");
                form.validate(); // Inicia la validación del formulario

                // Si estamos en el paso de "DatosPersonales", ejecuta la validación específica
                if (currentStep === 0) {
                    const inputNombres = document.getElementById('NombreApellidos');
                    if (!validarNombresApellidos(inputNombres)) {
                        return false;
                    }
                }

                return form.valid();
            }
            // Evento para el botón "Siguiente Paso"
            document.getElementById("nextBtn").addEventListener("click", function () {
                if (validateSection()) {
                    if (currentStep < steps.length - 1) {
                        currentStep++;
                        showStep(currentStep);

                        // Actualizar la imagen de progreso según el paso actual
                        updateProgressImage(currentStep);
                        //Enviar al top de la pagina
                        focusOnProgressImage();
                    }
                }
            });

            function updateProgressImage(step) {
                var imageElement = document.getElementById("lineaprogreso");
                imageElement.src = `./img/paso${step}.png`;
            }
            function focusOnProgressImage() {
                var element = document.getElementById("lineaprogreso");
                if (element) {
                    element.scrollIntoView({ behavior: 'smooth' });
                    element.focus();
                }
            }

            // Evento para el botón "Enviar" con SweetAlert2
            document.getElementById("submitBtn").addEventListener("click", function (event) {
                event.preventDefault(); // Prevenir el envío inmediato del formulario

                if (validateSection()) {  // Asegurarte de que la sección actual es válida antes de mostrar el pop-up
                    Swal.fire({
                        title: '¿Estás seguro de que quieres crear este proyecto?',
                        text: "¡No podrás revertir esto!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#9b59b6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sí, crear',
                        cancelButtonText: 'No, cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            document.getElementById("crearProyectoForm").submit(); // Enviar el formulario si el usuario confirma
                        }
                    });
                }
            });
        });
    </script>
}
